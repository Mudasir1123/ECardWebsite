@model ECardWebsite.Models.User

@{
    ViewData["Title"] = "Create User";
}

<div class="container mt-4">
    <h1>Create User</h1>
    <hr />

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">@TempData["SuccessMessage"]</div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
    }

    <form asp-action="Create" method="post" class="needs-validation" novalidate>
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <div class="form-group mb-3">
            <label asp-for="Name" class="form-label"></label>
            <input asp-for="Name" class="form-control" required />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="Email" class="form-label"></label>
            <input asp-for="Email" type="email" class="form-control" required />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="Password" class="form-label"></label>
            <input asp-for="Password" type="password" class="form-control"
                   minlength="6" required />
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="Role" class="form-label"></label>
            <select asp-for="Role" class="form-select" required>
                <option value="User">User</option>
                <option value="Admin">Admin</option>
            </select>
            <span asp-validation-for="Role" class="text-danger"></span>
        </div>

        <div class="form-group">
            <button type="submit" class="btn btn-primary">Create</button>
            <a asp-action="Index" class="btn btn-secondary ms-2">Cancel</a>
        </div>
    </form>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        // Client-side validation
        (function () {
            'use strict'

            // Fetch all the forms we want to apply custom Bootstrap validation styles to
            var forms = document.querySelectorAll('.needs-validation')

            // Loop over them and prevent submission
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }

                        form.classList.add('was-validated')
                    }, false)
                })
        })()
    </script>
}